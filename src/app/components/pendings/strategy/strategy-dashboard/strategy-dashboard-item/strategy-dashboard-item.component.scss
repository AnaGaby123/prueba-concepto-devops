@use 'base' as s;

:host {
  & > .item {
    @include s.pending-dashboard-list-item;

    & > .content {
      @include s.absoluteTop;
      @include s.flexRowWrap;

      & > .name {
        @include s.flexRowNoWrap;
        margin-bottom: 5px;
        width: 100%;

        & > .label-name {
          @include s.responsive-font-format(
            $font-family: s.$font-family-roboto_bold,
            $font-weight: s.$font-weight-bold,
            $font-size-map: s.$responsive-font-17-21,
            $color: s.$pqGreen
          );
          @include s.multiLineTextTruncateSinHeight(1, normal, rgba(255, 255, 255, 1), rgba(25, 255, 255, 0));
        }
      }

      & > .classification {
        @include s.flexRowNoWrap;
        margin-bottom: 8px;
        width: 100%;

        & > label:nth-of-type(1) {
          @include s.responsive-font-format(
            $font-family: s.$font-family-roboto_bold,
            $font-weight: s.$font-weight-bold,
            $font-size-map: s.$responsive-font-16-20
          );
          @include s.multiLineTextTruncateSinHeight(1, normal, rgba(255, 255, 255, 1), rgba(25, 255, 255, 0));
        }
      }

      & > .states {
        @include s.absoluteCenter;
        @include s.flexRowNoWrap;
        justify-content: flex-start;
        width: 100%;

        & > div:nth-of-type(1) {
          margin-left: 0 !important;
        }

        & > div {
          @include s.flexRowNoWrap;
          @include s.absoluteCenter;
          width: auto;
          margin-left: 7px;

          & > img:nth-of-type(1) {
            height: 15px;
            margin-right: 7px;
          }

          & > label:nth-of-type(1),
          & > label:nth-of-type(2) {
            @include s.responsive-font-format(
              $font-family: s.$font-family-roboto_regular,
              $font-weight: s.$font-weight-regular,
              $font-size-map: s.$responsive-font-14-16
            );
            &.confirmed {
              color: s.$pqGreen2;
            }

            &.pending {
              color: s.$pqOrange;
            }

            &.error {
              color: s.$pqRed;
            }
          }

          & > label:nth-of-type(2) {
            margin-left: 7px;
          }
        }
      }
    }
  }

  @include s.media-query(s.$standard) {
    & > .item {
      & > .content {
        & > .states {
          & > div {
            & > img:nth-of-type(1) {
              height: 20px;
              margin-right: 10px;
            }

            & > label:nth-of-type(2) {
              margin-left: 10px;
            }
          }
        }
      }
    }
  }
}
