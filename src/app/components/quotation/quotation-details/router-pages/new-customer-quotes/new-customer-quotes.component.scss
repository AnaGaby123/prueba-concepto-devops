@use 'base' as s;

* {
  box-sizing: border-box;
}

:host {
  @include s.flexColumn;
  flex: 1;
  @include s.absolute100;

  .container-principal {
    @include s.flexColumn;
    @include s.absolute100;
    flex: 1;
    overflow-y: auto;
    overflow-x: hidden;

    & > .container-data-client {
      align-items: center;
      column-gap: 20px;
      display: grid;
      grid-template-columns: 1fr 0fr 0fr 0fr 0fr 0fr 0fr;
      grid-template-rows: auto;
      justify-items: stretch;
      padding: 40px;
      row-gap: 15px;

      & > .img-log {
        align-items: start;
        grid-column-end: span 1;
        max-height: 89px;
        max-width: 100%;
      }

      & > .ability {
        @include s.responsive-font-format(
          $color: s.$main-proquifa,
          $font-family: s.$font_family_roboto_bold,
          $font-size-map: s.$responsive-font-13-13,
          $font-weight: s.$font-weight-bold
        );
      }

      & > .col-regis {
        gap: 5px;

        & > span {
          @include s.responsive-font-format(
            $color: s.$main-proquifa,
            $font-family: s.$font_family_roboto_bold,
            $font-size-map: s.$responsive-font-13-13,
            $font-weight: s.$font-weight-bold
          );
        }

        & > label {
          @include s.responsive-font-format(
            $color: s.$dark-proquifa,
            $font-family: s.$font-family_roboto,
            $font-size-map: s.$responsive-font-13-13
          );
        }
      }

      & > .sms {
        display: flex;
        flex-direction: column;
      }

      & > .xl {
        grid-column-end: span 3;
      }

      & > .dates {
        display: grid;
        grid-template-columns: 50% 50%;
        justify-items: stretch;
      }

      & > .col-grid-1 {
        column-gap: -10px;
        grid-column-end: span 3;
      }

      & > .xm {
        grid-column-end: span 1;
      }

      & > .col-flex {
        align-items: center;
        align-self: flex-end;
        display: flex;
        gap: 10px 5px;
        margin: 0 0 5px 0;

        & > label {
          @include s.responsive-font-format(
            $color: s.$dark-proquifa,
            $font-family: s.$font-family_roboto_regular,
            $font-size-map: s.$responsive-font-13-13
          );
          margin-right: 10px;
        }
      }

      & > .btn-registro {
        border-radius: 5px;
        border: 1px solid black;
        font-weight: 900;
        text-align: center;
        width: 70px;
      }
    }
    & > .dates-address {
      background: rgb(s.$pqGreen, 0.05);
      column-gap: 20px;
      display: grid;
      grid-template-columns: repeat(3, 1fr) minmax(400px, 1fr);
      grid-template-areas:
        ' deliveryAddress . . .'
        'deliveryRoute region search . '
        'country street . cpNumbers '
        'state city municipality suburb '
        'distance payShipping . saveBtn ';
      padding: 20px;
      row-gap: 24px;
      & > .delivery-route {
        grid-area: deliveryRoute;
      }
      & > .region {
        grid-area: region;
      }
      & > .search {
        align-self: flex-end;
        grid-area: search;
        grid-column-end: span 2;
      }
      & > .country {
        grid-area: country;
      }
      & > .street {
        grid-area: street;
        grid-column-end: span 2;
      }
      & > .delivery-address {
        align-items: center;
        display: flex;
        gap: 40px;
        grid-area: deliveryAddress;
        grid-column-end: span 2;
        & > .address-label {
          @include s.responsive-font-format(
            $color: s.$dark-proquifa,
            $font-family: s.$font-family_roboto_bold,
            $font-size-map: s.$responsive-font-15-15,
            $font-weight: s.$font-weight_bold
          );
          min-width: max-content;
        }
      }
      & > .cp-numbers {
        column-gap: 20px;
        display: grid;
        grid-area: cpNumbers;
        grid-template-columns: repeat(2, 1fr) 150px;
      }
      & > .state {
        grid-area: state;
      }
      & > .city {
        grid-area: city;
      }
      & > .municipality {
        grid-area: municipality;
      }
      & > .suburb {
        grid-area: suburb;
      }
      & > .distance {
        align-items: center;
        display: flex;
        grid-area: distance;
        grid-column-end: span 4;
        justify-content: space-between;
      }
      & > .payShipping {
        grid-area: payShipping;
      }
      & > .saveBtn {
        grid-area: saveBtn;
        display: flex;
        justify-content: flex-end;
        align-items: center;
        & .enable {
          $max-width-map: (
            'base': 300px,
            'macBookAir': 310px,
          );
          @include s.pqfButton($max-width-map: $max-width-map);
        }
        & .disabled {
          $max-width-map: (
            'base': 300px,
            'macBookAir': 310px,
          );
          @include s.pqfDisableButton($max-width-map: $max-width-map);
        }
      }
    }

    & > .contacts {
      @include s.flexColumn();
      flex: 1;

      & > .listContact {
        @include s.flexColumn();
        flex: 1;
        padding: 35px 18px 14px 18px;

        & > .contactContainer {
          @include s.absolute100();
          min-height: 170px;

          & > div {
            @include s.absolute100();

            & > .contactGrid {
              @include s.flexRowWrap();
              @include s.absolute100();
              align-items: flex-start;
              align-content: flex-start;
              box-sizing: border-box;
              padding-top: 10px;

              & > virtual-scroller {
                @include s.absolute100();
                @include s.fixVirtualScroller();
                overflow: inherit;

                &::ng-deep > .scrollable-content {
                  $ItemsSizeMap: (
                    'base': 140px,
                    'macBookAir': 155px,
                  );
                  @include s.itemsCardWithGrid(350px, $ItemsSizeMap);
                }

                @include s.responsive_layout('macBookAir') {
                  &::ng-deep > .scrollable-content {
                    $ItemsSizeMap: (
                      'base': 140px,
                      'macBookAir': 155px,
                    );
                    @include s.itemsCardWithGrid(375px, $ItemsSizeMap);
                  }
                }
              }
            }
          }
        }

        & > .borderLine {
          @include s.flexRow;
          border-bottom: 1px solid;
          box-sizing: border-box;
          justify-content: space-between;
          align-items: self-end;
          padding: 0 0 14px 0;

          & > .title {
            @include s.escaledFontFormat(s.$textSize17to24, regular, s.$pqBlack4);
            @include s.Novecento-Bold();
            text-transform: uppercase;
          }

          & > .required-data {
            @include s.Roboto-Regular();
            @include s.escaledFontFormat(s.$textSize12to14, regular, s.$pqGreen);
          }
        }
      }
    }
  }

  .footer {
    @include s.flexRow();
    align-items: center;
    border-top: 2px solid s.$pqBlack2;
    flex: 0 0 57px;
    justify-content: space-between;

    & > .btn {
      $max-width-map: (
        'base': 200px,
        'macBookAir': 210px,
      );
      &.enable {
        @include s.pqfButton($max-width-map: $max-width-map);
      }
      &.disable {
        @include s.pqfDisableButton($max-width-map: $max-width-map);
      }

      &.cancel {
        margin-left: 20px;
      }

      &.save,
      &.edit {
        margin-right: 20px;
      }
    }
  }

  .pop-alert {
    & .container {
      @include s.absoluteCenter();
      @include s.flexColumn();
      align-items: center;

      & > img {
        @include s.default-transition();
        height: 50px;
        margin-bottom: 20px;
        width: 50px;
      }

      & > div {
        @include s.flexColumn();
        padding: 0 40px;

        & > label {
          @include s.escaledFontFormat(s.$textSize26to29, regular, s.$pqBlack2);
          @include s.Roboto-Regular();
        }

        & > label:nth-of-type(2) {
          padding-top: 10px;
        }
      }
    }
  }

  .text-disabled {
    color: s.$pqGray3;
  }

  .lineal {
    align-items: center;
    display: flex;
    height: 100%;
    margin-top: 25px;

    & > input {
      height: initial;
    }

    label {
      margin-left: 10px;
    }
  }

  @include s.responsive_layout('macBookAir') {
    .container-principal {
      & > .container-data-client {
        grid-template-columns: 3fr 5fr 1fr 7fr 10fr 10fr 10fr 10fr;

        & > .xl {
          grid-column-end: span 4;
        }

        & > .col-grid-1 {
          grid-column-end: span 4;
        }
      }
    }
  }
}
