@use 'base' as s;

:host {
  & > .item {
    @include s.pending-dashboard-list-item;
    & > .content {
      @include s.absoluteTop();
      @include s.flexRowWrap();
      row-gap: 5px;

      & > .name {
        @include s.flexRowNoWrap();
        width: 100%;

        & > label {
          @include s.responsive-font-format(
            $font-family: s.$font-family-roboto_bold,
            $font-weight: s.$font-weight-bold,
            $font-size-map: s.$responsive-font-17-21,
            $color: s.$pqGreen
          );
          @include s.multiLineTextTruncateSinHeight(1, normal, rgba(255, 255, 255, 1), rgba(25, 255, 255, 0));
        }
      }

      & > .classification {
        @include s.flexRowNoWrap();
        align-items: center;
        column-gap: 5px;
        & > label {
          @include s.responsive-font-format(
            $font-family: s.$font-family-roboto_bold,
            $font-weight: s.$font-weight-bold,
            $font-size-map: s.$responsive-font-16-20
          );
          @include s.multiLineTextTruncateSinHeight(1, normal, rgba(255, 255, 255, 1), rgba(25, 255, 255, 0));
        }
        & > img {
          height: 15px;
        }
      }

      & > .states {
        @include s.absoluteCenter();
        @include s.flexRowNoWrap();
        justify-content: flex-start;
        width: 100%;

        & > .content {
          margin-left: 0 !important;
        }

        & > div {
          @include s.absoluteCenter();
          @include s.flexRowNoWrap();
          margin-left: 7px;
          width: auto;

          & > img {
            height: 16px;
            margin-right: 7px;
            width: auto;
          }

          & > label {
            @include s.responsive-font-format(
              $font-family: s.$font-family-roboto_regular,
              $font-weight: s.$font-weight-regular,
              $font-size-map: s.$responsive-font-14-16
            );

            &.new {
              color: s.$pqGreen2;
            }

            &.saved {
              color: s.$pqOrange;
            }

            &.sent {
              color: s.$pqBlue;
            }
          }

          & > label:nth-of-type(2) {
            margin-left: 7px;
          }
        }
      }
    }
  }
}
