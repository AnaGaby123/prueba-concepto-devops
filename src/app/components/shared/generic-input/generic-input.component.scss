@use 'base' as s;

* {
  box-sizing: border-box;
}

:host {
  width: 100%;

  & > .genericInput {
    width: 100%;
    position: relative;

    &.genericInputDanger {
      & > .label-container {
        & > div:nth-of-type(1) {
          & > label {
            color: #dc3545 !important;
          }
        }
      }

      & > .container-input {
        border: 1px solid #dc3545 !important;
      }
    }

    & > .label-container {
      @include s.flexRow;
      @include s.absoluteCenter;
      height: 19px;
      justify-content: flex-start;
      margin-bottom: 3px;
      overflow: hidden;
      width: 100%;
      /*&.notEditing {
        padding: 0 10px;
      }*/
      & > img {
        flex: 0 0 7px;
        margin-right: 3px;
        width: 7px;
      }

      & > div:nth-of-type(1) {
        @include s.multiLineTextTruncateSinHeight(1, normal, rgba(255, 255, 255, 1), rgba(25, 255, 255, 0));
        flex: 1 1 auto;
        word-break: break-all;

        & > label:nth-of-type(1) {
          @include s.escaledFontFormat(s.$textSize13to16, regular, s.$pqBlack2);
          @include s.Roboto-Regular;
        }
      }
    }

    & > .container-input {
      @include s.flexRow;
      @include s.absoluteCenter;
      background-color: s.$pqWhite;
      border: 1px solid s.$boxShadow;
      height: 25px !important;
      overflow: hidden;
      position: relative;
      width: 100%;

      &.tooltip {
        @include s.tooltip(auto, auto, auto, 150px, $trianglePosition: 'left');
      }

      /*      & > label.textTruncate {
        @include multiLineTextTruncateSinHeight(1, normal, rgba(255, 255, 255, 1), rgba(25, 255, 255, 0));
      }*/
      &.notEditing {
        @include s.flexRow;
        @include s.absoluteCenter;
        background-color: transparent;
        border: none;
        justify-content: flex-start;

        & > label {
          @include s.multiLineTextTruncateSinHeight(1, normal, rgba(255, 255, 255, 1), rgba(25, 255, 255, 0));
          word-break: break-all;
          width: 100%;
        }

        & > .extraString {
          display: flex;
          padding-left: 5px;
        }
      }

      & > .inside-label-left {
        @include s.escaledFontFormat(s.$textSize12to14, bold, s.$pqBlack2);
        @include s.Roboto-Bold;
        min-width: max-content;
        padding: 0 0 0 10px;
      }

      & > .inside-label-right {
        @include s.escaledFontFormat(s.$textSize12to14, bold, s.$pqBlack2);
        @include s.Roboto-Bold;
        min-width: max-content;
        padding: 0 10px 0 0;
      }

      & > .inside-label-disable {
        color: s.$pqGray3;
      }

      & > input {
        @include s.escaledFontFormat(s.$textSize13to16, regular, s.$pqBlack2);
        @include s.Roboto-Regular;
        border: none;
        height: 100%;
        outline: none;
        width: 100%;
      }

      & > input::-webkit-input-placeholder {
        /* WebKit, Blink, Edge */
        color: s.$pqGray3;
      }

      & > input:-moz-placeholder {
        /* Mozilla Firefox 4 to 18 */
        color: s.$pqGray3;
      }

      & > input::-moz-placeholder {
        /* Mozilla Firefox 19+ */
        color: s.$pqGray3;
      }

      & > input::-ms-input-placeholder {
        /* Internet Explorer 10-11 */
        color: s.$pqGray3;
      }

      & > input::-ms-input-placeholder {
        /* Microsoft Edge */
        color: s.$pqGray3;
      }

      & > input::placeholder {
        /* Most modern browsers support this now. */
        color: s.$pqGray3;
      }

      input[type='number']::-webkit-inner-spin-button,
      input[type='number']::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }

      & > .arrows {
        @include s.flexColumn;
        flex: 0 0 auto;
        height: 100%;
        justify-content: space-evenly;
        padding-right: 10px;

        &.disable {
          & > img {
            cursor: default;
          }
        }

        & > img {
          cursor: pointer;
          width: 10px;
        }

        & > .arrowUp {
          transform: rotate(180deg);
        }
      }

      & > label {
        @include s.escaledFontFormat(s.$textSize13to16, regular, s.$pqBlack2);
        @include s.Roboto-Regular;
      }
    }

    & > .alertError {
      @include s.flexRow;
      background-color: #e26a56;
      height: max-content;
      text-align: center;
      padding: 3px;
      position: absolute;
      z-index: 100;
      width: 100%;

      & > label {
        @include s.Roboto-Regular;
        @include s.escaledFontFormat(s.$textSize12to13, regular, s.$pqWhite);
      }
    }
  }

  @include s.responsive_layout('macBookAir') {
    & > .genericInput {
      & > .label-container {
        height: 21px;
      }

      & > .container-input {
        height: 30px !important;

        &.notEditing {
          & > .extraString {
            display: initial;
          }
        }

        & > .arrows {
          & > img {
            width: 11px;
          }
        }
      }

      & > .alertError {
        padding: 5px;
      }
    }
  }
}

.pop-content {
  & > label {
    @include s.Roboto-Regular;
    @include s.escaledFontFormat(s.$textSize12to13, regular, s.$pqWhite);
  }
}
